{"app_entry": {}, "conda_platforms": ["noarch"], "full_name": "bioconda/longestrunsubsequence", "owner": {"description": "Bioconda is a distribution of bioinformatics software realized as a channel for the versatile Conda package manager.", "url": "", "company": "", "user_type": "org", "location": "", "login": "bioconda", "created_at": "2015-09-11 22:59:20.880000+00:00", "name": "bioconda"}, "home": "https://github.com/AlBi-HHU/longest-run-subsequence", "source_git_url": null, "source_git_tag": null, "app_type": {}, "upvoted": 0, "id": "6040d89a220d2dbee41c75ab", "app_summary": {}, "public": true, "revision": 2, "files": [{"description": null, "basename": "noarch/longestrunsubsequence-1.0.1-py_0.tar.bz2", "labels": ["main"], "dependencies": {"depends": [{"name": "python", "specs": [[">=", "3.5"]]}]}, "distribution_type": "conda", "attrs": {"constrains": ["pulp >= 2"], "build_number": 0, "license": "MIT", "has_prefix": false, "noarch": "python", "machine": null, "platform": null, "depends": ["python >=3.5"], "build": "py_0", "timestamp": 1614788687136, "arch": null, "operatingsystem": null, "target-triplet": "None-any-None", "subdir": "noarch"}, "full_name": "bioconda/longestrunsubsequence/1.0.1/noarch/longestrunsubsequence-1.0.1-py_0.tar.bz2", "owner": "bioconda", "size": 15324, "upload_time": "2021-03-04 12:54:52.831000+00:00", "ndownloads": 227, "download_url": "//api.anaconda.org/download/bioconda/longestrunsubsequence/1.0.1/noarch/longestrunsubsequence-1.0.1-py_0.tar.bz2", "version": "1.0.1", "md5": "4a6828f920d4dd24af53b756177fc864", "type": "conda"}], "package_types": ["conda"], "description": "This is an implementation of the longest run subsequence problem, introduced in (Schrinner et al., WABI 2020) https://drops.dagstuhl.de/opus/volltexte/2020/12795/. It describes a string problem, which looks for the longest subsequence of a string such that this sequence contains at most one consecutive run for each character in the underlying alphabet. The code contains two different algorithms (based on Integer Linear Programming and on Dynamic Programming) as described in the publication. The problem appears in the context of homology-based scaffolding of two contig sets, originating from two individuals of the same species.", "releases": [{"version": "1.0.1", "distributions": [], "full_name": "bioconda/longestrunsubsequence/1.0.1"}], "html_url": "http://anaconda.org/bioconda/longestrunsubsequence", "builds": ["py_0"], "watchers": 1, "dev_url": null, "name": "longestrunsubsequence", "license": "MIT", "versions": ["1.0.1"], "url": "http://api.anaconda.org/packages/bioconda/longestrunsubsequence", "created_at": "2021-03-04 12:54:50.941000+00:00", "modified_at": "2021-03-04 12:54:53.837000+00:00", "latest_version": "1.0.1", "summary": "Implementation of a solver for the Longest Run Subsequence Problem. Given a sequence as input, compute a longest subsequence such that there is at most one run for every character.", "license_url": null, "doc_url": null}